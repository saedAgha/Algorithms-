Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"


Solution :
public class Solution {
    public string ReverseWords(string s) 
    {
        string reverseStr= string.Empty;
        if(string.IsNullOrEmpty(s.Trim()))
        {
           return s.Trim(); 
        } 
        
        reverseStr=ReduceSpaces(s.Trim());
        reverseStr=ReverseWordWithoutMultiSpaces(reverseStr);
        
        return reverseStr;  
    }
    
    public string ReduceSpaces(string s)
    {
        StringBuilder sb = new StringBuilder();
        for(int i=0,sbIndex=0;i<s.Length;i++)
        {
            if(s[i]==' ' && sbIndex>0 && sb[sbIndex-1]==' ')
            {
                continue;
            }
            else
            {
                sb.Append(s[i]);
                sbIndex++;
            }
        }
        
        return sb.ToString();
        
    }
    
    public string  ReverseWordWithoutMultiSpaces(string s)
    {
        List<string> strList = s.Split(' ').ToList();
        StringBuilder sb = new StringBuilder ();
        for(int i=strList.Count-1;i>=0;i--)  
        {
            
           sb.Append(strList[i]);
            if(i!=0)
            {
                sb.Append(" ");
            }
            
        }
        return sb.ToString();
        
    }
    
}
